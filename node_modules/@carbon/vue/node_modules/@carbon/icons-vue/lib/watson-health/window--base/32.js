'use strict';

var __chunk_1 = require('../../chunk-d2faeea1.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_WatsonHealthWindowBase32 = {
  name: 'WatsonHealthWindowBase32',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(__chunk_1._objectSpread2({
      width: '32',
      height: '32',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = __chunk_1._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = __chunk_1._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M15 2H17V5H15zM25 13H28V15H25zM15 23H17V26H15zM4 13H7V15H4z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M7.55 5.03H9.55V8.030000000000001H7.55z",
        "transform": "rotate(-45 8.56 6.544)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M21.96 5.54H24.96V7.54H21.96z",
        "transform": "rotate(-45 23.469 6.539)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M22.46 19.94H24.46V22.94H22.46z",
        "transform": "rotate(-45 23.462 21.442)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M7.04 20.45H10.04V22.45H7.04z",
        "transform": "rotate(-45 8.554 21.447)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M4 28H28V30H4zM16 20a6 6 0 1 0-6-6A6 6 0 0 0 16 20zm0-10v8a4 4 0 0 1 0-8z"
      }
    }), children]);
  }
};

module.exports = virtual_WatsonHealthWindowBase32;
