'use strict';

var __chunk_1 = require('../chunk-8483fd01.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_Attachment16 = {
  name: 'Attachment16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(__chunk_1._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = __chunk_1._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = __chunk_1._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M14.1,9L7,1.9C5.6,0.6,3.3,0.7,2,2.1S0.7,5.6,1.9,7l1.6,1.6l0.8-0.8L2.7,6.2c-1-0.9-1-2.5-0.1-3.5s2.5-1,3.5-0.1l0.1,0.1\tl7.1,7.1c1,0.9,1,2.5,0.1,3.5s-2.5,1-3.5,0.1l-0.1-0.1L6.5,9.9C5.9,9.4,5.9,8.5,6.5,8s1.4-0.5,1.9,0l0,0l1.7,1.7L10.9,9L9.1,7.2\tc-1-0.9-2.5-0.9-3.5,0.1c-0.9,0.9-0.9,2.4,0,3.3L9,14.1c1.4,1.3,3.7,1.2,5-0.2S15.3,10.4,14.1,9z"
      }
    }), children]);
  }
};

module.exports = virtual_Attachment16;
