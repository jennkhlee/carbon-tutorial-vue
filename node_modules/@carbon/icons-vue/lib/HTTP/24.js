'use strict';

var __chunk_1 = require('../chunk-8483fd01.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_Http24 = {
  name: 'Http24',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(__chunk_1._objectSpread2({
      width: '24',
      height: '24',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = __chunk_1._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = __chunk_1._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M30 11H25V21h2V18h3a2.0027 2.0027 0 0 0 2-2V13A2.0023 2.0023 0 0 0 30 11zm-3 5V13h3l.001 3zM10 13L12 13 12 21 14 21 14 13 16 13 16 11 10 11 10 13zM23 11L17 11 17 13 19 13 19 21 21 21 21 13 23 13 23 11zM6 11L6 15 3 15 3 11 1 11 1 21 3 21 3 17 6 17 6 21 8 21 8 11 6 11z"
      }
    }), children]);
  }
};

module.exports = virtual_Http24;
