'use strict';

var __chunk_1 = require('../chunk-8483fd01.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_SettingsAdjust16 = {
  name: 'SettingsAdjust16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(__chunk_1._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = __chunk_1._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = __chunk_1._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M15 4h-2.1c-.2-1.1-1.2-2-2.4-2S8.3 2.9 8.1 4H1v1h7.1c.2 1.1 1.2 2 2.4 2s2.2-.9 2.4-2H15V4zM10.5 6C9.7 6 9 5.3 9 4.5S9.7 3 10.5 3 12 3.7 12 4.5 11.3 6 10.5 6zM1 12h2.1c.2 1.1 1.2 2 2.4 2s2.2-.9 2.4-2H15v-1H7.9C7.7 9.9 6.7 9 5.5 9s-2.2.9-2.4 2H1V12zM5.5 10C6.3 10 7 10.7 7 11.5S6.3 13 5.5 13 4 12.3 4 11.5 4.7 10 5.5 10z"
      }
    }), children]);
  }
};

module.exports = virtual_SettingsAdjust16;
